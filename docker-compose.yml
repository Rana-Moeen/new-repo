# version: '3.8'

# services:
#   postgres:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: mydb
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#       # POSTGRES_HOST: postgresdb
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   adminer:
#     image: adminer
#     ports:
#       - "8080:8080"
#     environment:
#       ADMINER_DEFAULT_SERVER: postgres
#     depends_on:
#       - postgres
  
#   auth:
#     image: muzammal-test:latest
#     build:
#       context: /backend/auth
#       dockerfile: Dockerfile
#     ports:
#       - "4000:4000"
#     command: sh ./entrypoint.sh
#     restart: always
#     environment:
#       POSTGRES_USERNAME: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_HOST: postgres # updated to match service name
#       POSTGRES_DATABASE: mydb
#       APP_PORT: 4000 # Ensure this matches the port in your app.js
#     volumes:                  #Bind mount
#      - ./backend/auth:/app    #Bind mount
#     depends_on:
#       - postgres

#   web:
#     image: noor:latest
#     build:
#       context: /web
#       dockerfile: Dockerfile
#     ports:
#        - "3000:80"

#     depends_on:
#       - auth
# volumes:
#   postgres-data:


#new code

# version: '3.8'

# services:
#   postgres:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: mydb
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   adminer:
#     image: adminer
#     ports:
#       - "8080:8080"
#     environment:
#       ADMINER_DEFAULT_SERVER: postgres
#     depends_on:
#       - postgres
  
#   auth:
#     image: muzammal-test:latest
#     build:
#       context: ./backend/auth
#       dockerfile: Dockerfile
#     ports:
#       - "4000:4000"
#     command: sh ./entrypoint.sh
#     restart: always
#     environment:
#       POSTGRES_USERNAME: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_HOST: postgres
#       POSTGRES_DATABASE: mydb
#       APP_PORT: 4000
#     volumes:
#       - ./backend/auth:/app  # Bind mount for live code changes
#     depends_on:
#       - postgres

#   web:
#     image: noor:latest
#     build:
#       context: ./web
#       dockerfile: Dockerfile
#     ports:
#        - "3000:80"
#     volumes:
#       - ./web:/usr/share/nginx/html  # Bind mount for live code changes
#     depends_on:
#       - auth

# volumes:
#   postgres-data:




#new code 1

# version: '3.8'

# services:
#   postgres:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: mydb
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   adminer:
#     image: adminer
#     ports:
#       - "8080:8080"
#     environment:
#       ADMINER_DEFAULT_SERVER: postgres
#     depends_on:
#       - postgres
  
#   auth:
#     image: muzammal-test:latest
#     build:
#       context: ./backend/auth
#       dockerfile: Dockerfile
#     ports:
#       - "4000:4000"
#     command: npx nodemon /app/app.js  # Use nodemon for auto-reloading (update "app.js" to your main file)
#     restart: always
#     environment:
#       POSTGRES_USERNAME: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_HOST: postgres
#       POSTGRES_DATABASE: mydb
#       APP_PORT: 4000
#       volumes:
    
#       - ./backend/auth:/app  # Bind mount for live code changes
#     depends_on:
#       - postgres

#   web:
#     image: noor:latest
#     build:
#       context: ./web
#       dockerfile: Dockerfile
#     ports:
#        - "3000:80"
#     volumes:
#       - ./web:/usr/share/nginx/html  # Bind mount for live code changes
#     depends_on:
#       - auth

# volumes:
#   postgres-data:

 
#new code 2

version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
  
  auth:
  
    image: muzammal-test:latest
    
    volumes:                    # ---Place volumes at the top level, not under environment
      - ./backend/auth:/app
              # ---Start with nodemon for auto-reloading
         #---restart: always
    build:
      context: ./backend/auth 
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    
    command: sh ./entrypoint.sh 
    restart: always
    environment:
      POSTGRES_USERNAME: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: postgres
      POSTGRES_DATABASE: mydb
      APP_PORT: 4000
    #----volumes:                    #-------- Place volumes at the top level, not under environment
     #------------ - ./backend/auth:/app     #---------- Bind mount for live code changes
    
    depends_on:
      - postgres

  web:
    image: noor:latest
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    # volumes:
    #   - ./web:/usr/share/nginx/html  #---------- Bind mount for live code changes
    depends_on:
      - auth

volumes:
  postgres-data:

#new code 3

# version: '3.8'

# services:
#   postgres:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: mydb
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data

#   adminer:
#     image: adminer
#     ports:
#       - "8080:8080"
#     environment:
#       ADMINER_DEFAULT_SERVER: postgres
#     depends_on:
#       - postgres
  
#   auth:
#     build:
#       context: ./backend/auth
#       dockerfile: Dockerfile
#     image: muzammal-test:latest
#     volumes:
#       - ./backend/auth:/app          # Bind mount for live code changes
#     ports:
#       - "4000:4000"
#     command: nodemon app.js          # Start with nodemon for auto-reloading
#     restart: always
#     environment:
#       POSTGRES_USERNAME: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_HOST: postgres
#       POSTGRES_DATABASE: mydb
#       APP_PORT: 4000
#     depends_on:
#       - postgres

#   web:
#     image: noor:latest
#     build:
#       context: ./web
#       dockerfile: Dockerfile
#     ports:
#       - "3000:80"
#     volumes:
#       - ./web:/usr/share/nginx/html   # Bind mount for live code changes
#     depends_on:
#       - auth

# volumes:
#   postgres-data:

#new code 4

# version: '3.9'

# services:
#   postgres:
#     image: postgres:13
#     environment:
#       POSTGRES_DB: mydb
#       POSTGRES_USER: myuser
#       POSTGRES_PASSWORD: mypassword
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U myuser"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   adminer:
#     image: adminer
#     ports:
#       - "8080:8080"
#     environment:
#       ADMINER_DEFAULT_SERVER: postgres
#     depends_on:
#       - postgres

#   auth:
#     image: muzammal-test:latest
#     build:
#       context: ./backend/auth 
#       dockerfile: Dockerfile
#     ports:
#       - "4000:4000"
#     command: sh ./entrypoint.sh
#     restart: always
#     environment:
#       POSTGRES_USERNAME: myuser
#       POSTGRES_PASSWORD: mypassword
#       POSTGRES_HOST: postgres
#       POSTGRES_DATABASE: mydb
#       APP_PORT: 4000
#     volumes:
#       - ./backend/auth:/app
#     depends_on:
#       - postgres
#     healthcheck:
#       test: ["CMD-SHELL", "curl -f || exit 1"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   web:
#     image: noor:latest
#     build:
#       context: ./web
#       dockerfile: Dockerfile
#     ports:
#       - "3000:80"
#     volumes:
#       - ./web:/usr/share/nginx/html
#     depends_on:
#       - auth

# volumes:
#   postgres-data:
